---
swagger: "2.0"
info:
  description: "Records Management"
  version: "1.0.0"
  title: "Records Management"
tags:
- name: "Document Types"
  description: "Record types are categories of records that share the same metadata\
    \ and share the same retention rules"
- name: "Documents"
  description: "Containers for formal records that are associated with a RECORD TYPE\
    \ and which include a location, link or attachment to a record stored in a repository"
- name: "Retention Rules"
  description: "Retention rules are the organization's rules for how long a group\
    \ of records (identified by record types) need to be retained, and whether they\
    \ need to be transferred or destroyed, and whether a review and approval workflow\
    \ is required before destruction"
- name: "Jobs"
  description: "Scheduled Jobs to run import queries"
- name: "Connections"
  description: "CMIS Connections to CMIS server-repository"
- name: "CMIS Client"
  description: "API used to browse a given CMIS connection"
- name: "Administration"
schemes:
- "http"
paths:
  /connections:
    get:
      tags:
      - "Connections"
      summary: "List all Connections"
      description: "List all Connections"
      produces:
      - "application/json"
      parameters:
      - name: "query"
        in: "query"
        description: "Query parameter on list"
        required: false
        type: "string"
      - name: "parser"
        in: "query"
        description: "(Optional) Parser parameter on list (default = rql)"
        required: false
        type: "string"
        default: "RQL"
        enum:
        - "RQL"
        - "FT"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Connection"
    post:
      tags:
      - "Connections"
      summary: "Create a new Connection"
      description: "Create a new Connection"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "connection"
        description: "Connection object"
        required: true
        schema:
          $ref: "#/definitions/ConnectionInput"
      responses:
        201:
          description: "Successfully created"
          headers:
            Location:
              type: "string"
              description: "location of the newly created connection"
  /connections/repositories:
    post:
      tags:
      - "CMIS Client"
      summary: "List repositories for the given connection when creating connection"
      description: "List repositories for the given connection when creating connection"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "connection"
        description: "Connection object"
        required: true
        schema:
          $ref: "#/definitions/Connection"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ETObject"
  /connections/test:
    post:
      tags:
      - "Connections"
      summary: "test a connection on a CMIS server"
      description: "test a connection on a CMIS server"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "connection"
        description: "Connection object"
        required: true
        schema:
          $ref: "#/definitions/ConnectionInput"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "boolean"
  /connections/{id}:
    get:
      tags:
      - "Connections"
      summary: "Get a Connection"
      description: "Get a Connection"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/Connection"
    put:
      tags:
      - "Connections"
      summary: "Modify a given Connection"
      description: "Modify a given Connection"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      - in: "body"
        name: "connection"
        description: "Connection object"
        required: true
        schema:
          $ref: "#/definitions/ConnectionInput"
      responses:
        204:
          description: "Successfully modified"
    delete:
      tags:
      - "Connections"
      summary: "Delete a given Connection"
      description: "Delete a given Connection"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      responses:
        204:
          description: "Successfully deleted"
  /connections/{id}/children:
    get:
      tags:
      - "CMIS Client"
      summary: "Get children of the root from the given repository"
      description: "Get children of the root from the given repository repository\
        \ (folders, documents, items, relationships, ...)"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      - name: "query"
        in: "query"
        description: "Query parameter on list"
        required: false
        type: "string"
      - name: "parser"
        in: "query"
        description: "(Optional) Parser parameter on list (default = rql)"
        required: false
        type: "string"
        default: "RQL"
        enum:
        - "RQL"
        - "FT"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ETObject"
  /connections/{id}/connect:
    post:
      tags:
      - "CMIS Client"
      summary: "Connect to a given connection"
      description: "Connect to a given connection"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      - in: "body"
        name: "credentials"
        description: "Credentials object"
        required: true
        schema:
          $ref: "#/definitions/Credentials"
      responses:
        204:
          description: "Successfully connected"
  /connections/{id}/disconnect:
    post:
      tags:
      - "CMIS Client"
      summary: "Disconnect to a given connection"
      description: "Disconnect to a given connection"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      responses:
        204:
          description: "Successfully disconnected"
  /connections/{id}/repositories:
    get:
      tags:
      - "CMIS Client"
      summary: "List repositories for the given connection when connection created"
      description: "List repositories for the given connection when connection created"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ETObject"
  /connections/{id}/status:
    get:
      tags:
      - "Connections"
      summary: "Get a connection status"
      description: "Get a connection status"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/ConnectionStatus"
  /connections/{id}/types:
    get:
      tags:
      - "CMIS Client"
      summary: "List all types in the repository"
      description: "List all types in the repository"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ObjectType"
  /connections/{id}/{objectId}:
    get:
      tags:
      - "CMIS Client"
      summary: "Get a given object"
      description: "Get a given object"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      - name: "objectId"
        in: "path"
        description: "Object id"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/ETObject"
  /connections/{id}/{objectId}/children:
    get:
      tags:
      - "CMIS Client"
      summary: "Get children of the root from the given object"
      description: "Get children of the root from the given object"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      - name: "objectId"
        in: "path"
        description: "Object id"
        required: true
        type: "string"
      - name: "query"
        in: "query"
        description: "Query parameter on list"
        required: false
        type: "string"
      - name: "parser"
        in: "query"
        description: "(Optional) Parser parameter on list (default = rql)"
        required: false
        type: "string"
        default: "RQL"
        enum:
        - "RQL"
        - "FT"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ETObject"
  /connections/{id}/{objectId}/children/types:
    get:
      tags:
      - "CMIS Client"
      summary: "List distinct types of the children"
      description: "List distinct types of the children of the given object"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      - name: "objectId"
        in: "path"
        description: "Object id"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ObjectType"
  /connections/{id}/{objectId}/content:
    get:
      tags:
      - "CMIS Client"
      summary: "Get content of a specific File"
      description: "Get content of a specific File"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      - name: "objectId"
        in: "path"
        description: "Object id"
        required: true
        type: "string"
      responses:
        200:
          description: "Successfully retrieved"
          schema:
            type: "file"
          headers:
            content-type:
              type: "string"
              description: "application/octet-stream"
  /connections/{id}/{objectId}/types:
    get:
      tags:
      - "CMIS Client"
      summary: "List types of the given object"
      description: "List types of the given object"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      - name: "objectId"
        in: "path"
        description: "Object id"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ObjectType"
  /dashboard/jobs:
    get:
      tags:
      - "Dashboard"
      summary: "Get jobs for dashboard"
      description: "Get jobs for dashboard"
      produces:
      - "application/json"
      parameters:
      - name: "status"
        in: "query"
        description: "Status"
        required: false
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/DashboardJobInfo"
  /dashboard/stats:
    get:
      tags:
      - "Dashboard"
      summary: "Get stats for dashboard"
      description: "Get stats for dashboard"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/SearchResultsFacets"
  /departments:
    get:
      tags:
      - "Administration"
      summary: "List Departments test lpe aru"
      description: "List Departments"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Department"
  /documents:
    get:
      tags:
      - "Documents"
      summary: "List Document objects"
      description: "List Document objects"
      produces:
      - "application/json"
      parameters:
      - name: "documentType"
        in: "query"
        description: "Document type code"
        required: true
        type: "string"
      - name: "count"
        in: "query"
        description: "(Optional) Count parameter on list"
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "(Optional) Offset parameter on list"
        required: false
        type: "integer"
      - name: "query"
        in: "query"
        description: "Query parameter on list"
        required: false
        type: "string"
      - name: "filterQuery"
        in: "query"
        description: "(Optional) Filter Query parameter on list"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "parser"
        in: "query"
        description: "(Optional) Parser parameter on list (default = rql)"
        required: false
        type: "string"
        default: "RQL"
        enum:
        - "RQL"
        - "FT"
      - name: "sort"
        in: "query"
        description: "(Optional) Sort parameter on list"
        required: false
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/SearchResults"
    post:
      tags:
      - "Documents"
      summary: "Create a Document"
      description: "Create a Document"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "object"
        required: false
        schema:
          $ref: "#/definitions/DocumentInput"
      responses:
        201:
          description: "Successfully created"
  /documents/destroy:
    post:
      tags:
      - "Documents"
      summary: "Approve destruction for selected Documents"
      description: "Approve destruction for selected Documents"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "ids"
        required: false
        schema:
          $ref: "#/definitions/AlphaKeys"
      responses:
        204:
          description: "Successfully destructed"
  /documents/export:
    post:
      tags:
      - "Documents"
      summary: "Export the given Document Objects"
      description: "Export the given Document Objects"
      consumes:
      - "application/json"
      produces:
      - "application/octet-stream"
      parameters:
      - in: "body"
        name: "ids"
        required: true
        schema:
          $ref: "#/definitions/AlphaKeys"
      - name: "format"
        in: "header"
        description: "Tell which format  you want (PDF, CSV or XLS)"
        required: false
        type: "string"
        default: "PDF"
        enum:
        - "PDF"
        - "XLS"
        - "CSV"
      - name: "attachement"
        in: "header"
        description: "Tell if we want to download or not"
        required: false
        type: "boolean"
        default: false
      - name: "template"
        in: "header"
        description: "the template name to download"
        required: false
        type: "string"
      responses:
        200:
          description: "Successfully treated"
          schema:
            type: "file"
  /documents/{id}:
    get:
      tags:
      - "Documents"
      summary: "Get the given Document"
      description: "Get the given Document"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/Document"
    put:
      tags:
      - "Documents"
      summary: "Modify a Document"
      description: "Modify a Document"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      - in: "body"
        name: "object"
        required: true
        schema:
          $ref: "#/definitions/DocumentInput"
      responses:
        204:
          description: "Successfully modified"
    delete:
      tags:
      - "Documents"
      summary: "Delete a Document"
      description: "Delete a Document"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      responses:
        204:
          description: "Successfully deleted"
  /documents/{id}/files:
    post:
      tags:
      - "Documents"
      summary: "Set/Replace a file to the given Document"
      description: "Set/Replace a file to the given Document"
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      - name: "file"
        in: "formData"
        description: "the attachment content"
        required: true
        type: "file"
      responses:
        204:
          description: "Successfully added"
  /documents/{id}/files/{fileId}:
    get:
      tags:
      - "Documents"
      summary: "Get a specific File"
      description: "Get a specific File"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      - name: "fileId"
        in: "path"
        description: "File's id"
        required: true
        type: "string"
      responses:
        200:
          description: "Successfully retrieved"
          schema:
            type: "file"
          headers:
            content-type:
              type: "string"
              description: "application/octet-stream"
  /documents/{id}/files/{fileId}/thumbnail:
    get:
      tags:
      - "Documents"
      summary: "Get the thumbnail of the File"
      description: "Get the thumbnail of the File"
      produces:
      - "image/png"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      - name: "fileId"
        in: "path"
        description: "File's id"
        required: true
        type: "string"
      responses:
        200:
          description: "Successfully retrieved"
          schema:
            type: "file"
          headers:
            content-type:
              type: "string"
              description: "image/png"
  /documents/{id}/history:
    get:
      tags:
      - "Documents"
      summary: "Get an history of a Document"
      description: "Get history of a Document (Date and user for creation and modifications)."
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/History"
  /documents/{id}/thumbnail:
    get:
      tags:
      - "Documents"
      summary: "Get a thumbnail"
      description: "Get a thumbnail of the first page of his first document attached\
        \ if there is one."
      produces:
      - "image/png"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "file"
          headers:
            content-type:
              type: "string"
              description: "image/png"
  /holds:
    get:
      tags:
      - "Holds"
      summary: "List all Holds"
      description: "List all Holds"
      produces:
      - "application/json"
      parameters:
      - name: "count"
        in: "query"
        description: "(Optional) Count parameter on list"
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "(Optional) Offset parameter on list"
        required: false
        type: "integer"
      - name: "query"
        in: "query"
        description: "Query parameter on list"
        required: false
        type: "string"
      - name: "parser"
        in: "query"
        description: "(Optional) Parser parameter on list (default = rql)"
        required: false
        type: "string"
        default: "RQL"
        enum:
        - "RQL"
        - "FT"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Hold"
    post:
      tags:
      - "Holds"
      summary: "Create a new Hold"
      description: "Create a new Hold"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "hold"
        description: "Hold object"
        required: true
        schema:
          $ref: "#/definitions/HoldInput"
      responses:
        201:
          description: "Successfully created"
          headers:
            Location:
              type: "string"
              description: "location of the newly created hold"
  /holds/{id}:
    get:
      tags:
      - "Holds"
      summary: "Get a Hold"
      description: "Get a Hold"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/Hold"
    put:
      tags:
      - "Holds"
      summary: "Modify a given Hold"
      description: "Modify a given Hold"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      - in: "body"
        name: "hold"
        description: "Hold object"
        required: true
        schema:
          $ref: "#/definitions/HoldInput"
      responses:
        204:
          description: "Successfully modified"
    delete:
      tags:
      - "Holds"
      summary: "Delete a given Hold"
      description: "Delete a given Hold"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      responses:
        204:
          description: "Successfully deleted"
  /holds/{id}/close:
    post:
      tags:
      - "Holds"
      summary: "Close this hold (and all the records it contains, ie. release them)"
      description: "Close this hold (and all the records it contains, ie. release\
        \ them)"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      responses:
        204:
          description: "Successfully closed"
  /holds/{id}/documents:
    get:
      tags:
      - "Holds"
      summary: "Get documents of this hold"
      description: "Get documents of this hold"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ObjectLink"
    post:
      tags:
      - "Holds"
      summary: "Add documents to this hold"
      description: "Add documents to this hold"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      - in: "body"
        name: "holdDocuments"
        required: false
        schema:
          $ref: "#/definitions/HoldDocumentsContainer"
      responses:
        204:
          description: "Successfully added"
  /holds/{id}/documents/close:
    post:
      tags:
      - "Holds"
      summary: "Close/Release some documents from this hold"
      description: "Close/Release some documents from this hold"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      - in: "body"
        name: "holdDocuments"
        required: false
        schema:
          $ref: "#/definitions/HoldDocumentsContainer"
      responses:
        204:
          description: "Successfully closed"
  /jobs:
    get:
      tags:
      - "Jobs"
      summary: "List all Jobs"
      description: "List all Jobs"
      produces:
      - "application/json"
      parameters:
      - name: "query"
        in: "query"
        description: "Query parameter on list"
        required: false
        type: "string"
      - name: "parser"
        in: "query"
        description: "(Optional) Parser parameter on list (default = rql)"
        required: false
        type: "string"
        default: "RQL"
        enum:
        - "RQL"
        - "FT"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Job"
    post:
      tags:
      - "Jobs"
      summary: "Create a new Job"
      description: "Create a new Job"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "job"
        description: "Job object"
        required: true
        schema:
          $ref: "#/definitions/JobInput"
      responses:
        201:
          description: "Successfully created"
          headers:
            Location:
              type: "string"
              description: "location of the newly created job"
  /jobs/queries/unused:
    get:
      tags:
      - "Jobs"
      summary: "Get all queries that has not been associated with existing job"
      description: "Get a job status"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Query"
  /jobs/{id}:
    get:
      tags:
      - "Jobs"
      summary: "Get a job"
      description: "Get a job"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/Job"
    put:
      tags:
      - "Jobs"
      summary: "Modify a given Job"
      description: "Modify a given Job"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      - in: "body"
        name: "job"
        description: "Job object"
        required: true
        schema:
          $ref: "#/definitions/JobInput"
      responses:
        204:
          description: "Successfully modified"
    delete:
      tags:
      - "Jobs"
      summary: "Delete a given Job"
      description: "Delete a given Job"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      responses:
        204:
          description: "Successfully deleted"
  /jobs/{id}/status:
    get:
      tags:
      - "Jobs"
      summary: "Get a job status"
      description: "Get a job status"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/JobStatus"
  /profile:
    get:
      tags:
      - "Administration"
      summary: "Get user profile parameters"
      description: "Get user profile parameters"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/Profile"
  /profile/picture:
    get:
      tags:
      - "Administration"
      summary: "Get picture of connected user"
      description: "Get picture of connected user"
      produces:
      - "image/png"
      parameters: []
      responses:
        200:
          description: "Successful response"
          schema:
            type: "file"
          headers:
            content-type:
              type: "string"
              description: "image/png"
  /queries:
    get:
      tags:
      - "Queries"
      summary: "List all Queries"
      description: "List all Queries"
      produces:
      - "application/json"
      parameters:
      - name: "query"
        in: "query"
        description: "Query parameter on list"
        required: false
        type: "string"
      - name: "parser"
        in: "query"
        description: "(Optional) Parser parameter on list (default = rql)"
        required: false
        type: "string"
        default: "RQL"
        enum:
        - "RQL"
        - "FT"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Query"
    post:
      tags:
      - "Queries"
      summary: "Create a new Query"
      description: "Create a new Query"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "query"
        description: "Query object"
        required: true
        schema:
          $ref: "#/definitions/QueryInput"
      responses:
        201:
          description: "Successfully created"
          headers:
            Location:
              type: "string"
              description: "location of the newly created query"
  /queries/test:
    get:
      tags:
      - "Queries"
      summary: "test a query on a CMIS server"
      description: "test a query on a CMIS server"
      produces:
      - "application/json"
      parameters:
      - name: "query"
        in: "query"
        description: "Query parameter on list"
        required: false
        type: "string"
      - name: "connectionId"
        in: "query"
        description: "Connection id parameter"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "(Optional) Offset parameter on list"
        required: false
        type: "integer"
      - name: "count"
        in: "query"
        description: "(Optional) Count parameter on list"
        required: false
        type: "integer"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "boolean"
  /queries/{id}:
    get:
      tags:
      - "Queries"
      summary: "Get a Query"
      description: "Get a Query"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/Query"
    put:
      tags:
      - "Queries"
      summary: "Modify a given Query"
      description: "Modify a given Query"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      - in: "body"
        name: "query"
        description: "Query object"
        required: true
        schema:
          $ref: "#/definitions/QueryInput"
      responses:
        204:
          description: "Successfully modified"
    delete:
      tags:
      - "Queries"
      summary: "Delete a given Query"
      description: "Delete a given Query"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      responses:
        204:
          description: "Successfully deleted"
  /queries/{id}/types:
    post:
      tags:
      - "Queries"
      summary: "Create automatically a Document Type from a Query"
      description: "Create automatically a Document Type from a Query"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      - in: "body"
        name: "type"
        description: "Type object"
        required: true
        schema:
          $ref: "#/definitions/DocumentTypeBaseInput"
      responses:
        200:
          description: "Successfully created"
  /retentions:
    get:
      tags:
      - "Retention Rules"
      summary: "List Retention rules"
      description: "List Retention rules"
      produces:
      - "application/json"
      parameters:
      - name: "query"
        in: "query"
        description: "Query parameter on list"
        required: false
        type: "string"
      - name: "parser"
        in: "query"
        description: "(Optional) Parser parameter on list (default = rql)"
        required: false
        type: "string"
        default: "RQL"
        enum:
        - "RQL"
        - "FT"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Retention"
    post:
      tags:
      - "Retention Rules"
      summary: "Create/Duplicate a new Retention Rule"
      description: "Create/Duplicate a new Retention Rule"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "retentionRule"
        description: "Retention rule object"
        required: true
        schema:
          $ref: "#/definitions/RetentionInput"
      responses:
        201:
          description: "Successfully created"
          headers:
            Location:
              type: "string"
              description: "location of the newly created retention rule"
  /retentions/{id}:
    get:
      tags:
      - "Retention Rules"
      summary: "List Retention rules"
      description: "List Retention rules"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/Retention"
    put:
      tags:
      - "Retention Rules"
      summary: "Modify a Retention Rule"
      description: "Modify a  Retention Rule"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      - in: "body"
        name: "retentionRule"
        description: "Retention rule object"
        required: true
        schema:
          $ref: "#/definitions/RetentionInput"
      responses:
        204:
          description: "Successfully modified"
    delete:
      tags:
      - "Retention Rules"
      summary: "Delete a Retention Rule"
      description: "Delete a Retention Rule"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      responses:
        204:
          description: "Successfully deleted"
  /retentions/{id}/export:
    post:
      tags:
      - "Retention Rules"
      summary: "Export a report of this Retention Rule"
      description: "Export a report of this Retention Rule"
      produces:
      - "application/pdf"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      responses:
        200:
          description: "Successfully treated"
          schema:
            type: "file"
          headers:
            content-type:
              type: "string"
              description: "application/pdf"
  /roles:
    get:
      tags:
      - "Administration"
      summary: "List Roles"
      description: "List Roles"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Role"
  /search:
    get:
      tags:
      - "Search"
      summary: "Global analytics search on anything"
      description: "Global analytics search on anything"
      produces:
      - "application/json"
      parameters:
      - name: "count"
        in: "query"
        description: "(Optional) Count parameter on list"
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "(Optional) Offset parameter on list"
        required: false
        type: "integer"
      - name: "query"
        in: "query"
        description: "Query parameter on list"
        required: false
        type: "string"
      - name: "filterQuery"
        in: "query"
        description: "(Optional) Filter Query parameter on list"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "parser"
        in: "query"
        description: "(Optional) Parser parameter on list (default = rql)"
        required: false
        type: "string"
        default: "RQL"
        enum:
        - "RQL"
        - "FT"
      - name: "sort"
        in: "query"
        description: "(Optional) Sort parameter on list"
        required: false
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/SearchResults"
  /search/export:
    get:
      tags:
      - "Search"
      summary: "Global analytics export on anything"
      description: "Global analytics export on anything"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "count"
        in: "query"
        description: "(Optional) Count parameter on list"
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "(Optional) Offset parameter on list"
        required: false
        type: "integer"
      - name: "query"
        in: "query"
        description: "Query parameter on list"
        required: false
        type: "string"
      - name: "filterQuery"
        in: "query"
        description: "(Optional) Filter Query parameter on list"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "parser"
        in: "query"
        description: "(Optional) Parser parameter on list (default = rql)"
        required: false
        type: "string"
        default: "RQL"
        enum:
        - "RQL"
        - "FT"
      - name: "sort"
        in: "query"
        description: "(Optional) Sort parameter on list"
        required: false
        type: "string"
      - name: "format"
        in: "query"
        description: "Tell which format  you want (PDF, CSV or XLS)"
        required: false
        type: "string"
        default: "PDF"
        enum:
        - "PDF"
        - "XLS"
        - "CSV"
      - name: "attachement"
        in: "query"
        description: "Tell if we want to download or not"
        required: false
        type: "boolean"
        default: false
      - name: "template"
        in: "header"
        description: "the template name to download"
        required: false
        type: "string"
      responses:
        200:
          description: "Successfully treated"
          schema:
            type: "file"
  /types:
    get:
      tags:
      - "Document Types"
      summary: "List Document types"
      description: "List Document types"
      produces:
      - "application/json"
      parameters:
      - name: "query"
        in: "query"
        description: "Query parameter on list"
        required: false
        type: "string"
      - name: "parser"
        in: "query"
        description: "(Optional) Parser parameter on list (default = rql)"
        required: false
        type: "string"
        default: "RQL"
        enum:
        - "RQL"
        - "FT"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/DocumentType"
    post:
      tags:
      - "Document Types"
      summary: "Create/Duplicate a Document Type"
      description: "Create/Duplicate a Document Type"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "recordType"
        description: "Document type object"
        required: true
        schema:
          $ref: "#/definitions/DocumentTypeInput"
      responses:
        200:
          description: "Successfully created"
  /types/icons:
    get:
      tags:
      - "Document Types"
      summary: "List icons for Document Types"
      description: "List icons for Document Types"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful Response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ObjectLink"
  /types/icons/{id}:
    get:
      tags:
      - "Document Types"
      summary: "Get the icon file"
      description: "Get the icon file"
      produces:
      - "image/png"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "file"
          headers:
            content-type:
              type: "string"
              description: "image/png"
  /types/{id}:
    get:
      tags:
      - "Document Types"
      summary: "Get a Document type"
      description: "Get a Document type"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/DocumentType"
    put:
      tags:
      - "Document Types"
      summary: "Modify a given Document type"
      description: "Modify a given Document type"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      - in: "body"
        name: "objectType"
        description: "Document type object"
        required: true
        schema:
          $ref: "#/definitions/DocumentTypeInput"
      responses:
        204:
          description: "Successfully modified"
    delete:
      tags:
      - "Document Types"
      summary: "Delete a Document Type"
      description: "Delete a Document Type"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      responses:
        204:
          description: "Successfully deleted"
  /types/{id}/queries:
    post:
      tags:
      - "Document Types"
      summary: "Create automatically a Query from a Document Type"
      description: "Create automatically a Query from a Document Type"
      consumes:
      - "application/x-www-form-urlencoded"
      parameters:
      - name: "id"
        in: "path"
        description: "Object alphanumeric id"
        required: true
        type: "string"
      - name: "connectionId"
        in: "formData"
        description: "Connection Id"
        required: true
        type: "string"
      - name: "sourceFolderId"
        in: "formData"
        description: "Source Folder Id"
        required: true
        type: "string"
      - name: "sourceTypeId"
        in: "formData"
        description: "Source Type Id"
        required: true
        type: "string"
      responses:
        200:
          description: "Successfully created"
definitions:
  DashboardJobInfo:
    type: "object"
    properties:
      job:
        $ref: "#/definitions/Job"
      jobStatus:
        $ref: "#/definitions/JobStatus"
      connection:
        $ref: "#/definitions/Connection"
    title: "Job Info for DashBoard"
  ObjectLink:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      uri:
        type: "string"
        description: "Location/Link to the item"
    description: "Link to an object"
  FileLink:
    allOf:
    - $ref: "#/definitions/ObjectLink"
    - properties:
        thumbnailUri:
          type: "string"
  Revision:
    type: "object"
    properties:
      date:
        type: "string"
        format: "date-time"
        description: "Date of the revision"
      user:
        $ref: "#/definitions/User"
      type:
        type: "string"
        description: "Type of the revision"
        enum:
        - "CREATION"
        - "MODIFICATION"
        - "DELETION"
        - "TRANSFER"
    title: "Revision of an object"
  History:
    type: "object"
    properties:
      object:
        $ref: "#/definitions/ObjectLink"
      revisions:
        type: "array"
        items:
          $ref: "#/definitions/Revision"
    title: "History Object"
  AlphaKeys:
    title: "Array of string Ids"
    type: "array"
    items:
      type: "string"
      title: "id"
  RetentionCommon:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      period:
        type: "integer"
        format: "int64"
        description: "retention period in years"
      details:
        type: "string"
        description: "regulation details"
      destruction:
        type: "boolean"
        description: "destruction options | true = automatic destruction at the end\
          \ of the retention period. | false = asking for approval"
    title: "A Retention Rule Object"
  RetentionInput:
    title: "A Retention Rule Object"
    allOf:
    - $ref: "#/definitions/RetentionCommon"
    - properties:
        ownerId:
          type: "string"
  Retention:
    title: "A Retention Rule Object"
    allOf:
    - $ref: "#/definitions/RetentionCommon"
    - properties:
        id:
          type: "string"
        owner:
          $ref: "#/definitions/ObjectLink"
  JobCommon:
    type: "object"
    required:
    - "frequency"
    - "period"
    properties:
      name:
        type: "string"
      active:
        type: "boolean"
        description: "Tell if this Job is active"
        default: true
      frequency:
        type: "integer"
        format: "int32"
        description: "Frequency and period tell us when to schedule the job"
      period:
        type: "string"
        description: "Frequency and period tell us when to schedule the job"
        enum:
        - "minutes"
        - "hours"
        - "days"
        - "weeks"
        - "months"
        - "years"
      moveFiles:
        type: "boolean"
        description: "Tell if we have to import also the files"
        default: false
    title: "A Job Object"
  JobInput:
    title: "A Job Object"
    allOf:
    - $ref: "#/definitions/JobCommon"
    - properties:
        queryId:
          type: "string"
        documentTypeId:
          type: "string"
  Job:
    title: "A Job Object"
    allOf:
    - $ref: "#/definitions/JobCommon"
    - properties:
        id:
          type: "string"
        query:
          $ref: "#/definitions/ObjectLink"
        documentType:
          $ref: "#/definitions/ObjectLink"
  JobStatus:
    type: "object"
    properties:
      id:
        type: "string"
      start:
        type: "string"
        format: "date-time"
      end:
        type: "string"
        format: "date-time"
      duration:
        type: "string"
        description: "Human readable localized message for the duration"
      next:
        type: "string"
        format: "date-time"
      errors:
        type: "array"
        items:
          type: "string"
    title: "A Job Status Object"
  ConnectionInput:
    type: "object"
    properties:
      name:
        type: "string"
      protocol:
        type: "string"
        description: "connection's protocol"
        enum:
        - "ATOMPUB"
        - "WEBSERVICES"
        - "BROWSER"
      credentials:
        $ref: "#/definitions/Credentials"
      url:
        type: "string"
      repository:
        type: "array"
        items:
          $ref: "#/definitions/Property"
      authentication:
        type: "string"
        description: "Authentification mode used for connection to this cmis server"
        enum:
        - "NONE"
        - "STANDARD"
        - "NTLM"
        - "OAUTH2"
    title: "A Connection Object"
  Connection:
    title: "A Connection Object"
    allOf:
    - $ref: "#/definitions/ConnectionInput"
    - properties:
        id:
          type: "string"
        source:
          type: "string"
  ConnectionStatus:
    type: "object"
    properties:
      id:
        type: "string"
      latestPing:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "Connection status"
        enum:
        - "ONLINE"
        - "OFFLINE"
    title: "A Connection Status Object"
  QueryCommon:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Query name"
      query:
        type: "string"
        description: "The query string to run"
    title: "A Query Object"
  QueryInput:
    title: "A Query Object"
    allOf:
    - $ref: "#/definitions/QueryCommon"
    - properties:
        connectionId:
          type: "string"
  Query:
    title: "A Query Object"
    allOf:
    - $ref: "#/definitions/QueryCommon"
    - properties:
        id:
          type: "string"
          pattern: "\\d*"
        created:
          type: "string"
          format: "date-time"
        connection:
          $ref: "#/definitions/ObjectLink"
        createdBy:
          $ref: "#/definitions/ObjectLink"
        documentType:
          $ref: "#/definitions/ObjectLink"
        properties:
          type: "array"
          items:
            $ref: "#/definitions/Property"
  HoldInput:
    type: "object"
    properties:
      name:
        type: "string"
      reason:
        type: "string"
        description: "Reason of this hold"
      start:
        type: "string"
        format: "date-time"
        description: "Start date for this hold"
      end:
        type: "string"
        format: "date-time"
        description: "End date for this hold"
    title: "A Hold Object"
  Hold:
    title: "A Hold Object"
    allOf:
    - $ref: "#/definitions/HoldInput"
    - properties:
        id:
          type: "string"
        documentsCount:
          type: "integer"
        createdBy:
          type: "string"
        status:
          type: "string"
          description: "Status of this hold"
          enum:
          - "COMPLETED"
          - "INPROGRESS"
  SearchResultsFacets:
    type: "object"
    properties:
      facetId:
        type: "string"
      label:
        type: "string"
      type:
        type: "string"
        description: "facet type representation"
        enum:
        - "PIE"
        - "BAR"
        - "TREEMAP"
      gap:
        type: "string"
      values:
        $ref: "#/definitions/FacetResults"
    title: "Search Results Facets"
  SearchResultsHeader:
    type: "object"
    properties:
      status:
        type: "integer"
      time:
        type: "integer"
      numFound:
        type: "integer"
        format: "int64"
      start:
        type: "integer"
        format: "int64"
      sort:
        type: "string"
      fields:
        type: "array"
        items:
          $ref: "#/definitions/PropertyResult"
    title: "Search Results Header"
  SearchResultsClusters:
    type: "object"
    properties:
      labels:
        type: "array"
        items:
          type: "string"
      score:
        type: "number"
        format: "float"
      docIds:
        type: "array"
        items:
          type: "string"
    title: "Search Results Clusters"
  SearchResults:
    type: "object"
    properties:
      header:
        $ref: "#/definitions/SearchResultsHeader"
      objects:
        type: "array"
        items:
          type: "object"
          properties: {}
      facets:
        type: "array"
        items:
          $ref: "#/definitions/SearchResultsFacets"
      clusters:
        type: "array"
        items:
          $ref: "#/definitions/SearchResultsClusters"
    title: "Search results"
  ObjectTypeInput:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
        description: "Short description of the Retention Rule"
      baseType:
        type: "string"
        description: "Get the type's base type, if the type is a derived (non-base)\
          \ type."
        enum:
        - "DOCUMENT"
        - "FOLDER"
        - "POLICY"
        - "RELATIONSHIP"
        - "ITEM"
    title: "Object Type Object Input"
  ObjectType:
    title: "Object Type Object"
    allOf:
    - $ref: "#/definitions/ObjectTypeInput"
    - properties:
        id:
          type: "string"
        propertyDefinitions:
          type: "array"
          description: "all types properties definitions (like for example, retention...)"
          items:
            $ref: "#/definitions/PropertyDefinition"
  DocumentTypeBaseInput:
    title: "Document Type Base Object Input"
    allOf:
    - $ref: "#/definitions/ObjectTypeInput"
    - properties:
        code:
          type: "string"
        departmentId:
          type: "string"
        retentionId:
          type: "string"
        iconId:
          type: "string"
        source:
          type: "string"
          description: "Source from newly created document type"
          enum:
          - "CMIS"
          - "NONE"
  DocumentTypeInput:
    title: "Document Type Object Input"
    allOf:
    - $ref: "#/definitions/DocumentTypeBaseInput"
    - properties:
        propertyDefinitions:
          type: "array"
          description: "all types properties definitions (like for example, retention...)"
          items:
            $ref: "#/definitions/PropertyDefinition"
  DocumentType:
    title: "Document Type Object"
    allOf:
    - $ref: "#/definitions/ObjectType"
    - properties:
        code:
          type: "string"
        department:
          $ref: "#/definitions/ObjectLink"
        retention:
          $ref: "#/definitions/ObjectLink"
        icon:
          $ref: "#/definitions/ObjectLink"
        source:
          type: "string"
          description: "Source from newly created document type"
          enum:
          - "CMIS"
          - "NONE"
  PropertyDefinition:
    type: "object"
    properties:
      name:
        type: "string"
      label:
        type: "string"
      type:
        type: "string"
        description: "type of the metadata. Has to be defined with Cmis specs"
        enum:
        - "BOOLEAN"
        - "DATETIME"
        - "DECIMAL"
        - "INTEGER"
        - "STRING"
        - "URI"
      size:
        type: "integer"
      default:
        type: "object"
        description: "Default value"
        properties: {}
      properties:
        type: "array"
        items:
          $ref: "#/definitions/Property"
    title: "Property Definition Object Input"
  PropertyResult:
    title: "PropertyResult result"
    allOf:
    - $ref: "#/definitions/PropertyDefinition"
    - properties:
        sortable:
          type: "boolean"
  ETObjectCommon:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      creationDate:
        type: "string"
        format: "date-time"
      createdBy:
        type: "string"
      modificationDate:
        type: "string"
        format: "date-time"
      modifiedBy:
        type: "string"
      properties:
        type: "array"
        items:
          $ref: "#/definitions/Property"
    title: "An Object with one or more properties"
  ETObjectInput:
    title: "An Object with one or more properties"
    allOf:
    - $ref: "#/definitions/ETObjectCommon"
    - properties:
        typeId:
          type: "string"
  ETObject:
    title: "An Object with one or more properties"
    allOf:
    - $ref: "#/definitions/ETObjectCommon"
    - properties:
        id:
          type: "string"
        type:
          $ref: "#/definitions/ObjectLink"
  DocumentInput:
    title: "A Document object"
    allOf:
    - $ref: "#/definitions/ETObjectInput"
    - {}
  Document:
    title: "A Document object"
    allOf:
    - $ref: "#/definitions/ETObject"
    - properties:
        hold:
          type: "boolean"
          description: "Tell if this document is hold or not"
        sysDeleteStatus:
          type: "string"
          description: "Delete status of this document"
          enum:
          - "UNDELETABLE"
          - "APPROVABLE"
          - "DELETABLE"
          - "DELETED"
        sysCreationDate:
          type: "string"
          format: "date-time"
        sysCreatedBy:
          type: "string"
        sysModificationDate:
          type: "string"
          format: "date-time"
        sysModifiedBy:
          type: "string"
        sysDeletionDate:
          type: "string"
          format: "date-time"
          description: "Deletion Date, date calculated from the retention rule never\
            \ changed manually"
        files:
          type: "array"
          items:
            $ref: "#/definitions/FileLink"
  Property:
    type: "object"
    properties:
      name:
        type: "string"
      value:
        type: "object"
        properties: {}
    title: "Property object"
  FacetResult:
    type: "object"
    properties:
      name:
        type: "string"
      label:
        type: "string"
      count:
        type: "integer"
    title: "Facet result"
  FacetResults:
    title: "Facet results"
    type: "array"
    items:
      $ref: "#/definitions/FacetResult"
  Credentials:
    type: "object"
    properties:
      username:
        type: "string"
      password:
        $ref: "#/definitions/Password"
    title: "Simple Credentials"
  Password:
    type: "object"
    properties:
      password:
        type: "string"
      passtrans:
        type: "string"
    title: "Password & encrypt information"
  HoldDocumentsContainer:
    type: "object"
    properties:
      holdId:
        type: "string"
      documentsId:
        type: "array"
        title: "Array of documents Ids"
        items:
          type: "string"
          title: "id"
      reason:
        type: "string"
    title: "container for Hold and DocType"
  User:
    type: "object"
    properties:
      id:
        type: "string"
      code:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      fullName:
        type: "string"
      description:
        type: "string"
      phone:
        type: "string"
      fax:
        type: "string"
      mobile:
        type: "string"
      mail:
        type: "string"
      language:
        type: "string"
    title: "User"
  Profile:
    type: "object"
    properties:
      user:
        $ref: "#/definitions/User"
      picture:
        type: "string"
      departmentsRole:
        type: "array"
        items:
          $ref: "#/definitions/Profile_departmentsRole"
    description: "Profile Object"
  Department:
    type: "object"
    properties:
      id:
        type: "string"
      code:
        type: "string"
      name:
        type: "string"
    description: "Department Object"
  Role:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
    description: "Role Object"
  Profile_departmentsRole:
    properties:
      role:
        $ref: "#/definitions/Role"
      department:
        $ref: "#/definitions/Department"
parameters:
  formatQueryParam:
    name: "format"
    in: "query"
    description: "Tell which format  you want (PDF, CSV or XLS)"
    required: false
    type: "string"
    default: "PDF"
    enum:
    - "PDF"
    - "XLS"
    - "CSV"
  attachmentQueryParam:
    name: "attachement"
    in: "query"
    description: "Tell if we want to download or not"
    required: false
    type: "boolean"
    default: false
  templateQueryParam:
    name: "template"
    in: "header"
    description: "the template name to download"
    required: false
    type: "string"
  sortQueryParam:
    name: "sort"
    in: "query"
    description: "(Optional) Sort parameter on list"
    required: false
    type: "string"
  offsetQueryParam:
    name: "offset"
    in: "query"
    description: "(Optional) Offset parameter on list"
    required: false
    type: "integer"
  countQueryParam:
    name: "count"
    in: "query"
    description: "(Optional) Count parameter on list"
    required: false
    type: "integer"
  queryQueryParam:
    name: "query"
    in: "query"
    description: "Query parameter on list"
    required: false
    type: "string"
  connectionIdQueryParam:
    name: "connectionId"
    in: "query"
    description: "Connection id parameter"
    required: false
    type: "string"
  filterQueryQueryParam:
    name: "filterQuery"
    in: "query"
    description: "(Optional) Filter Query parameter on list"
    required: false
    type: "array"
    items:
      type: "string"
    collectionFormat: "multi"
  parserQueryParam:
    name: "parser"
    in: "query"
    description: "(Optional) Parser parameter on list (default = rql)"
    required: false
    type: "string"
    default: "RQL"
    enum:
    - "RQL"
    - "FT"
  documentTypeQueryParam:
    name: "documentType"
    in: "query"
    description: "Document type code"
    required: true
    type: "string"
  statusQueryParam:
    name: "status"
    in: "query"
    description: "Status"
    required: false
    type: "string"
  alphaIdParam:
    name: "id"
    in: "path"
    description: "Object alphanumeric id"
    required: true
    type: "string"
  objectIdParam:
    name: "objectId"
    in: "path"
    description: "Object id"
    required: true
    type: "string"
  fileIdParam:
    name: "fileId"
    in: "path"
    description: "File's id"
    required: true
    type: "string"
  connectionIdFormParam:
    name: "connectionId"
    in: "formData"
    description: "Connection Id"
    required: true
    type: "string"
  sourceFolderIdFormParam:
    name: "sourceFolderId"
    in: "formData"
    description: "Source Folder Id"
    required: true
    type: "string"
  sourceTypeIdFormParam:
    name: "sourceTypeId"
    in: "formData"
    description: "Source Type Id"
    required: true
    type: "string"
